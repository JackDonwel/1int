# Generated by Django 5.2 on 2025-04-12 21:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advocate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tls_id', models.CharField(max_length=50, unique=True)),
                ('chapter', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='advocate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Advocate',
                'verbose_name_plural': 'Advocates',
                'ordering': ['-date_registered'],
            },
        ),
        migrations.CreateModel(
            name='StampApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp_type', models.CharField(choices=[('certification', 'Certification'), ('notarization', 'Notarization')], default='certification', max_length=50, validators=[django.core.validators.RegexValidator(message='Invalid stamp type', regex='^(certification|notarization)$')])),
                ('size', models.CharField(max_length=50)),
                ('collection_office', models.CharField(max_length=100)),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('payment', 'Awaiting Payment'), ('production', 'In Production'), ('ready', 'Ready for Collection'), ('rejected', 'Rejected'), ('collected', 'Collected')], default='pending', max_length=50)),
                ('payment_receipt', models.FileField(upload_to='payment_receipts/')),
                ('payment_verified', models.BooleanField(default=False)),
                ('control_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('qr_hash', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('qr_metadata', models.JSONField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('advocate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.advocate')),
            ],
            options={
                'verbose_name': 'Stamp Application',
                'verbose_name_plural': 'Stamp Applications',
                'ordering': ['-application_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=10)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='core.stampapplication')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'User Login'), ('application', 'Application Submitted'), ('status_change', 'Status Changed'), ('payment_verify', 'Payment Verified'), ('admin_action', 'Admin Action')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
                ('ip_address', models.GenericIPAddressField(default='0.0.0.0')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('affected_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='core.stampapplication')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='stampapplication',
            index=models.Index(fields=['status', 'application_date'], name='core_stampa_status_b4c5fd_idx'),
        ),
    ]
